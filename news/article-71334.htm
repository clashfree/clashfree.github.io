<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
    	<!-- Required meta tags -->
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
	<link rel="canonical" href="https://clashfree.github.io/news/article-71334.htm" />
	<link rel="icon" href="/assets/website/img/clashfree/favicon.ico" type="image/x-icon"/>
	<title>深度学习Pytorch——神经网络</title>
		<meta name="description" content="文章目录  深度学习Pytorch（三）——神经网络   一、简介 二、神经网络训练过程 三、实例演示   1、定义一个神经网络 2、通过调用net.parameters()返回模型可训练的参数 3、" />
	
    <meta name="author" content="ClashFree节点免费订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashfree.github.io/news/article-71334.htm" />
    <meta property="og:site_name" content="ClashFree节点免费订阅站" />
    <meta property="og:title" content="深度学习Pytorch——神经网络" />
    <meta property="og:image" content="https://clashfree.github.io/uploads/20240303/5aba4d49ecfb976fc7257d59ee9aa0d5.webp" />
        <meta property="og:release_date" content="2025-03-11T07:45:59" />
    <meta property="og:updated_time" content="2025-03-11T07:45:59" />
        <meta property="og:description" content="文章目录  深度学习Pytorch（三）——神经网络   一、简介 二、神经网络训练过程 三、实例演示   1、定义一个神经网络 2、通过调用net.parameters()返回模型可训练的参数 3、" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="深度学习Pytorch——神经网络">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    
	<link rel="stylesheet" href="/assets/website/css/clashfree/style-starter.css">
	<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
	<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
	<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
	<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FVS49PB05G"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FVS49PB05G');
</script>
	<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home" data-page="detail">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Clash Free                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/website/js/frontend/clashfree/jquery-3.5.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/website/js/frontend/clashfree/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        深度学习Pytorch——神经网络                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/news/" class="">新闻资讯 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> </h1> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#Pytorch_0" rel="nofollow">深度学习Pytorch（三）——神经网络</a></li> <li> <ul> <li><a href="#_2" rel="nofollow">一、简介</a></li> <li><a href="#_6" rel="nofollow">二、神经网络训练过程</a></li> <li><a href="#_15" rel="nofollow">三、实例演示</a></li> <li> <ul> <li><a href="#1_16" rel="nofollow">1、定义一个神经网络</a></li> <li><a href="#2netparameters_64" rel="nofollow">2、通过调用net.parameters()返回模型可训练的参数</a></li> <li><a href="#3_73" rel="nofollow">3、迭代整个输入</a></li> <li><a href="#4_83" rel="nofollow">4、调用反向传播</a></li> <li><a href="#5_92" rel="nofollow">5、计算损失值</a></li> <li><a href="#6_106" rel="nofollow">6、反向传播梯度</a></li> <li><a href="#7_120" rel="nofollow">7、更新神经网络参数</a></li> </ul> </li> </ul> </li> </ul> </div> <h2> <a id="_2" rel="nofollow"></a>一、简介</h2> <p>神经网络可以通过torch.nn包构建，上一节已经对自动梯度有些了解，神经网络是基于自动梯度来定义一些模型。一个nn.Module包括层和一个方法，它会返回输出。例如：数字图片识别的网络：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230108/c5b8591b4138b6ec7695d23fe5a33535.jpg" alt="深度学习Pytorch——神经网络"><br /> 上图是一个简单的前回馈神经网络，它接收输入，让输入一个接着一个通过一些层，最后给出输出。</p> <h2> <a id="_6" rel="nofollow"></a>二、神经网络训练过程</h2> <p>一个典型的神经网络训练过程包括一下几点：</p> <ol> <li>定义一个包含可以训练参数的神经网络</li> <li>迭代整个输入</li> <li>通过神经网络处理输入</li> <li>计算损失</li> <li>反向传播梯度到神经网络的参数</li> <li>更新网络的参数（典型的一个简单的更新方法是：weight=weight-learning_rate*gradient）</li> </ol> <h2> <a id="_15" rel="nofollow"></a>三、实例演示</h2> <h3> <a id="1_16" rel="nofollow"></a>1、定义一个神经网络</h3> <pre><code class="prism language-python"><span class="token comment"># -*- coding: utf-8 -*-</span> <span class="token triple-quoted-string string">""" Created on Sun Oct 24 15:56:23 2021 @author: Lenovo """</span> <span class="token comment"># 神经网络</span> <span class="token comment"># import torch</span> <span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn <span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>functional <span class="token keyword">as</span> F  <span class="token keyword">class</span> <span class="token class-name">Net</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>          <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token builtin">super</span><span class="token punctuation">(</span>Net<span class="token punctuation">,</span>self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token comment"># 1个输入，6个输出，5*5的卷积</span>         <span class="token comment"># 内核</span>         self<span class="token punctuation">.</span>conv1<span class="token operator">=</span>nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>         self<span class="token punctuation">.</span>conv2<span class="token operator">=</span>nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>         <span class="token comment"># 映射函数：线性——y=Wx+b</span>         self<span class="token punctuation">.</span>fc1<span class="token operator">=</span>nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">16</span><span class="token operator">*</span><span class="token number">5</span><span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">)</span><span class="token comment">#输入特征值：16*5*5，输出特征值：120</span>         self<span class="token punctuation">.</span>fc2<span class="token operator">=</span>nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">)</span>         self<span class="token punctuation">.</span>fc3<span class="token operator">=</span>nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>              <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>         x<span class="token operator">=</span>F<span class="token punctuation">.</span>max_pool2d<span class="token punctuation">(</span>F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>conv1<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment"># 如果其尺寸是一个square只能指定一个数字</span>         x<span class="token operator">=</span>F<span class="token punctuation">.</span>max_pool2d<span class="token punctuation">(</span>F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>conv2<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>         x<span class="token operator">=</span>x<span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>num_flat_features<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>         x<span class="token operator">=</span>F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>fc1<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>         x<span class="token operator">=</span>F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>fc2<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>         x<span class="token operator">=</span>self<span class="token punctuation">.</span>fc3<span class="token punctuation">(</span>x<span class="token punctuation">)</span>         <span class="token keyword">return</span> x          <span class="token keyword">def</span> <span class="token function">num_flat_features</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>         size<span class="token operator">=</span>x<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>         num_features<span class="token operator">=</span><span class="token number">1</span>         <span class="token keyword">for</span> s <span class="token keyword">in</span> size<span class="token punctuation">:</span>             num_features <span class="token operator">*=</span> s         <span class="token keyword">return</span> num_features                         net<span class="token operator">=</span>Net<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>net<span class="token punctuation">)</span> </code></pre> <p><strong>运行结果</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230108/947f94ed36ad945e47fa52e192950e2c.jpg" alt="深度学习Pytorch——神经网络"><br /> 以上定义了一个前馈函数，然后反向传播函数被自动通过autograd定义，可以使用任何张量操作在前馈函数上。</p> <h3> <a id="2netparameters_64" rel="nofollow"></a>2、通过调用net.parameters()返回模型可训练的参数</h3> <pre><code class="prism language-python"><span class="token comment"># 查看模型可训练的参数</span> params<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span>net<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># conv1 的权重weight</span> </code></pre> <p><strong>运行结果</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230108/99f5d3f4130f468b728a76f921bcdc27.jpg" alt="深度学习Pytorch——神经网络"></p> <h3> <a id="3_73" rel="nofollow"></a>3、迭代整个输入</h3> <p>尝试随机生成一个32<em>32的输入。注：期望的输入维度是32</em>32，为了在MNIST数据集上使用这个网络，我们需要把数据集中的图片维度修改为32*32</p> <pre><code class="prism language-python"><span class="token builtin">input</span><span class="token operator">=</span>torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span> out<span class="token operator">=</span>net<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span> </code></pre> <p><strong>运行结果</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230108/d03a0ec648ea0106d117f333d37506f0.jpg" alt="深度学习Pytorch——神经网络"></p> <h3> <a id="4_83" rel="nofollow"></a>4、调用反向传播</h3> <p>将所有参数梯度缓存器置零，用随机的梯度来反向传播</p> <pre><code class="prism language-python"><span class="token comment"># 调用反向传播</span> net<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span> out<span class="token punctuation">.</span>backward<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre> <p><strong>运行结果</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230108/43d729fcba511753c81a525d85007665.jpg" alt="深度学习Pytorch——神经网络"></p> <h3> <a id="5_92" rel="nofollow"></a>5、计算损失值</h3> <p>#计算损失值——损失函数：一个损失函数需要一对输入：模型输出和目标，然后计算一个值来评估输出距离目标多远。有一些不同的损失函数在nn包中，一个简单的损失函数就是nn.MSELoss，他计算了均方误差</p> <pre><code>如果跟随损失到反向传播路径，可以使用他的.grad_fn属性，将会看到一个计算图 </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230108/437cc41d0d178868284e333a9d590009.jpg" alt="深度学习Pytorch——神经网络"></p> <pre><code class="prism language-python"><span class="token comment"># 在调用loss.backward()时候，整个图都会微分，而且所有的图中的requires_grad=True的张量将会让他们的grad张量累计梯度</span> <span class="token comment">#跟随以下步骤反向传播</span> <span class="token keyword">print</span><span class="token punctuation">(</span>loss<span class="token punctuation">.</span>grad_fn<span class="token punctuation">)</span><span class="token comment">#MSELoss</span> <span class="token keyword">print</span><span class="token punctuation">(</span>loss<span class="token punctuation">.</span>grad_fn<span class="token punctuation">.</span>next_functions<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#Linear</span> <span class="token keyword">print</span><span class="token punctuation">(</span>loss<span class="token punctuation">.</span>grad_fn<span class="token punctuation">.</span>next_functions<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>next_functions<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#relu</span> </code></pre> <p><strong>运行结果</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230108/ba5abb5212f52bd0ba5f71664595e7cf.jpg" alt="深度学习Pytorch——神经网络"></p> <h3> <a id="6_106" rel="nofollow"></a>6、反向传播梯度</h3> <p>为了实现反向传播loss，我们所有需要做的事情仅仅是使用loss.backward()。<strong>需要先清空现存的梯度</strong>，不然梯度将会和现存的梯度累计在一起。</p> <pre><code class="prism language-python"><span class="token comment"># 调用loss.backward()然后看一下con1的偏置项在反向传播之前和之后的变化</span> net<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'conv1.bias.grad before backward'</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>net<span class="token punctuation">.</span>conv1<span class="token punctuation">.</span>bias<span class="token punctuation">.</span>grad<span class="token punctuation">)</span> loss<span class="token punctuation">.</span>backward<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#反向传播</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'conv1.bias.grad after backward'</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>net<span class="token punctuation">.</span>conv1<span class="token punctuation">.</span>bias<span class="token punctuation">.</span>grad<span class="token punctuation">)</span> </code></pre> <p><strong>运行结果</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230108/6e83242f180043b5d913eb334d6c6b17.jpg" alt="深度学习Pytorch——神经网络"></p> <h3> <a id="7_120" rel="nofollow"></a>7、更新神经网络参数</h3> <pre><code class="prism language-python"><span class="token comment"># =============================================================================</span> <span class="token comment"># # 最简单的更新规则就是随机梯度下降:weight=weight-learning_rate*gradient</span> <span class="token comment"># learning_rate=0.01</span> <span class="token comment"># for f in net.parameters():</span> <span class="token comment">#     f.data.sub_(f.grad.data*learning_rate)#f.data=f.data-learning_rate*gradient</span> <span class="token comment">#  =============================================================================</span> </code></pre> <p>如果使用的是神经网络，想要使用不同的更新规则，类似于SGD,Nesterov-SGD,Adam,RMSProp等。为了让这可行，Pytorch建立一个称为torch.optim的package实现所有的方法，使用起来更加方便</p> <pre><code class="prism language-python"><span class="token comment"># =============================================================================</span> <span class="token comment"># import torch.optim as optim</span> <span class="token comment"># optimizer=optim.SGD(net.parameters(), lr=0.01)</span> <span class="token comment"># # 在迭代训练过程中</span> <span class="token comment"># optimizer.zero_grad()#将现存梯度置零</span> <span class="token comment"># output=net(input)</span> <span class="token comment"># loss=criterion(output,target)</span> <span class="token comment"># loss.backward()#反向传递</span> <span class="token comment"># optimizer.step()#更新网络参数</span> <span class="token comment"># =============================================================================</span> </code></pre> <p>记得神经网络训练过程（part 二），其中最重要的还是梯度。记得反向传播~<br /> 今日告一段落，明儿见~</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-70678.htm">宠物粮食品牌前十排名有哪些呢图片大全（国内十大宠物粮食品牌）</a></p>
                                        <p>下一个：<a href="/news/article-71335.htm">宠物粮食市场分析报告总结（宠物粮食行业发展前景）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-28-clash-node-daily-updates.htm" title="1月28日 | 最新Clash/Shadowrocket/SSR/V2ray高速免费节点地址，最高速度18.5M/S，便宜机场推荐">1月28日 | 最新Clash/Shadowrocket/SSR/V2ray高速免费节点地址，最高速度18.5M/S，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-48201.htm" title="十大动物疫苗公司排名榜单图片（全球动物疫苗龙头公司）">十大动物疫苗公司排名榜单图片（全球动物疫苗龙头公司）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-5-free-v2ray-subscribe.htm" title="3月5日 | 最新V2ray/SSR/Clash/Shadowrocket高速免费节点地址，最高速度19.1M/S，便宜机场推荐">3月5日 | 最新V2ray/SSR/Clash/Shadowrocket高速免费节点地址，最高速度19.1M/S，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-4-free-shadowrocket-node.htm" title="3月4日 | 最新SSR/Clash/V2ray/Shadowrocket高速免费节点地址，最高速度19.3M/S，便宜机场推荐">3月4日 | 最新SSR/Clash/V2ray/Shadowrocket高速免费节点地址，最高速度19.3M/S，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-38334.htm" title="动物医院叫什么名字啊英文（动物医院 英文）">动物医院叫什么名字啊英文（动物医院 英文）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-10-clash-windows.htm" title="2月10日 | 最新SSR/Clash/Shadowrocket/V2ray高速免费节点地址，最高速度20.7M/S，便宜机场推荐">2月10日 | 最新SSR/Clash/Shadowrocket/V2ray高速免费节点地址，最高速度20.7M/S，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-14-free-ssr-node.htm" title="1月14日 | 最新V2ray/Clash/SSR/Shadowrocket高速免费节点地址，最高速度18M/S，便宜机场推荐">1月14日 | 最新V2ray/Clash/SSR/Shadowrocket高速免费节点地址，最高速度18M/S，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-17-node-share-links.htm" title="1月17日 | 最新V2ray/Shadowrocket/SSR/Clash高速免费节点地址，最高速度18.3M/S，便宜机场推荐">1月17日 | 最新V2ray/Shadowrocket/SSR/Clash高速免费节点地址，最高速度18.3M/S，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-58978.htm" title="springboot集成elasticsearch7.2">springboot集成elasticsearch7.2</a></li>
                        <li class="py-2"><a href="/news/article-56726.htm" title="动物疫苗接种方法及注意事项有哪些呢视频 动物疫苗接种方法及注意事项有哪些呢视频讲解">动物疫苗接种方法及注意事项有哪些呢视频 动物疫苗接种方法及注意事项有哪些呢视频讲解</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">39</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <p class="col-lg-8 copy-footer-29">
                    ClashFree节点免费订阅站 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>