<!doctype html>
<html lang="zh-CN">

<head>
    <!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="canonical" href="https://clashfree.github.io/news/article-24592.htm" />
<link rel="icon" href="/assets/website/img/clashfree/favicon.ico" type="image/x-icon"/>
<title>Redis详解&#8212;Redis持久化_在线工具</title>
<meta name="description" content="Redis持久化 redis提供了两种持久化的方式，分别是RDB（Redis DataBase）和AOF（Append Only File）。 RDB，简而言之，就是在不同的时间点，将redis存储的" />
<link rel="stylesheet" href="/assets/website/css/clashfree/style-starter.css">
<link href="https://fonts.googleapis.com/css?family=Josefin+Slab:400,700,700i&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FVS49PB05G"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FVS49PB05G');
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="home" data-page="detail">
    <section class=" w3l-header-4 header-sticky">
    <header class="absolute-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a class="navbar-brand" href="/">
                        Clash Free
                    </a>
                                <button class="navbar-toggler bg-gradient collapsed" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="fa icon-expand fa-bars"></span>
                    <span class="fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
        </div>
        </nav>
        </div>
    </header>
</section>
<script src="/assets/website/js/frontend/clashfree/jquery-3.5.1.min.js"></script> <!-- Common jquery plugin -->
<!--bootstrap working-->
<script src="/assets/website/js/frontend/clashfree/bootstrap.min.js"></script>
<!-- //bootstrap working-->
<!-- disable body scroll which navbar is in active -->
<script>
$(function() {
    $('.navbar-toggler').click(function() {
        $('body').toggleClass('noscroll');
    })
});
</script>
    <!-- breadcrumbs -->
    <section class="w3l-inner-banner-main">
        <div class="about-inner about ">
            <div class="container">
                <div class="main-titles-head text-center">
                    <h1 class="header-name" style="word-break: break-all;">
                        Redis详解&#8212;Redis持久化_在线工具                    </h1>
                    
                </div>
            </div>
        </div>
        <div class="breadcrumbs-sub">
            <div class="container">
                <ul class="breadcrumbs-custom-path">
                    <li class="right-side propClone"><a href="/" class="">首页 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="right-side propClone"><a href="/news/" class="">新闻资讯 <span class="fa fa-angle-right" aria-hidden="true"></span></a>
                        <p>
                    </li>
                    <li class="active ">正文</li>
                </ul>
            </div>
        </div>
        </div>
    </section>
    <!-- breadcrumbs //-->
    <section class="w3l-content-with-photo-4" id="about">
        <div class="content-with-photo4-block ">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                          				  				  				<h2><span style='font-family: "comic sans ms", sans-serif'>Redis持久化</span></h2> <p><span style='font-family: "comic sans ms", sans-serif'>redis提供了两种持久化的方式，分别是RDB（Redis DataBase）和AOF（Append Only File）。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>RDB，简而言之，就是在不同的时间点，将redis存储的数据生成快照并存储到磁盘等介质上；</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>AOF，则是换了一个角度来实现持久化，那就是将redis执行过的所有写指令记录下来，在下次redis重新启动时，只要把这些写指令从前到后再重复执行一遍，就可以实现数据恢复了。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>其实RDB和AOF两种方式也可以同时使用，在这种情况下，如果redis重启的话，则会优先采用AOF方式来进行数据恢复，这是因为AOF方式的数据恢复完整度更高。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>如果你没有数据持久化的需求，也完全可以关闭RDB和AOF方式，这样的话，redis将变成一个纯内存数据库，就像memcache一样。</span></p> <h3><span style='font-family: "comic sans ms", sans-serif'>RDB</span></h3> <p><span style='font-family: "comic sans ms", sans-serif'>RDB方式，是将redis某一时刻的数据持久化到磁盘中，是一种快照式的持久化方法。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>redis在进行数据持久化的过程中，会先将数据写入到一个临时文件中，待持久化过程都结束了，才会用这个临时文件替换上次持久化好的文件。正是这种特性，让我们可以随时来进行备份，因为快照文件总是完整可用的。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>对于RDB方式，redis会单独创建（fork）一个子进程来进行持久化，而主进程是不会进行任何IO操作的，这样就确保了redis极高的性能。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>如果需要进行大规模数据的恢复，且对于数据恢复的完整性不是非常敏感，那RDB方式要比AOF方式更加的高效。</span></p> <div> <h4> <span style='font-family: "comic sans ms", sans-serif'>RDB的优点：</span><br /> </h4> <p><span style='font-family: "comic sans ms", sans-serif'>·RDB是一个紧凑压缩的二进制文件，代表Redis在某个时间点上的数据 快照。非常适用于备份，全量复制等场景。比如每6小时执行bgsave备份， 并把RDB文件拷贝到远程机器或者文件系统中（如hdfs），用于灾难恢复。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>·Redis加载RDB恢复数据远远快于AOF的方式。</span></p> <h4><span style='font-family: "comic sans ms", sans-serif'>RDB的缺点：</span></h4> <p><span style='font-family: "comic sans ms", sans-serif'>·RDB方式数据没办法做到实时持久化/秒级持久化。因为bgsave每次运 行都要执行fork操作创建子进程，属于重量级操作，频繁执行成本过高。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>·RDB文件使用特定二进制格式保存，Redis版本演进过程中有多个格式 的RDB版本，存在老版本Redis服务无法兼容新版RDB格式的问题。</span></p> </div> <p><span style='font-family: "comic sans ms", sans-serif'>虽然RDB有不少优点，但它的缺点也是不容忽视的。如果你对数据的完整性非常敏感，那么RDB方式就不太适合你，所以，redis还提供了另一种持久化方式，那就是AOF。</span></p> <h3><span style='font-family: "comic sans ms", sans-serif'>AOF</span></h3> <p><span style='font-family: "comic sans ms", sans-serif'>AOF，英文是Append Only File，即只允许追加不允许改写的文件。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>如前面介绍的，AOF方式是将执行过的写指令记录下来，在数据恢复时按照从前到后的顺序再将指令都执行一遍，就这么简单。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>我们通过配置redis.conf中的appendonly yes就可以打开AOF功能。如果有写操作（如SET等），redis就会被追加到AOF文件的末尾。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>默认的AOF持久化策略是每秒钟fsync一次（fsync是指把缓存中的写指令记录到磁盘中），因为在这种情况下，redis仍然可以保持很好的处理性能，即使redis故障，也只会丢失最近1秒钟的数据。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>如果在追加日志时，恰好遇到磁盘空间满、inode满或断电等情况导致日志写入不完整，也没有关系，redis提供了redis-check-aof工具，可以用来进行日志修复。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>因为采用了追加方式，如果不做任何处理的话，AOF文件会变得越来越大，为此，redis提供了AOF文件重写（rewrite）机制，即当AOF文件的大小超过所设定的阈值时，redis就会启动AOF文件的内容压缩，只保留可以恢复数据的最小指令集。举个例子或许更形象，假如我们调用了100次INCR指令，在AOF文件中就要存储100条指令，但这明显是很低效的，完全可以把这100条指令合并成一条SET指令，这就是重写机制的原理。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>在进行AOF重写时，仍然是采用先写临时文件，全部完成后再替换的流程，所以断电、磁盘满等问题都不会影响AOF文件的可用性，这点大家可以放心。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>AOF方式的另一个好处，我们通过一个“场景再现”来说明。某同学在操作redis时，不小心执行了FLUSHALL，导致redis内存中的数据全部被清空了，这是很悲剧的事情。不过这也不是世界末日，只要redis配置了AOF持久化方式，且AOF文件还没有被重写（rewrite），我们就可以用最快的速度暂停redis并编辑AOF文件，将最后一行的FLUSHALL命令删除，然后重启redis，就可以恢复redis的所有数据到FLUSHALL之前的状态了。是不是很神奇，这就是AOF持久化方式的好处之一。但是如果AOF文件已经被重写了，那就无法通过这种方法来恢复数据了。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>虽然优点多多，但AOF方式也同样存在缺陷，比如在同样数据规模的情况下，AOF文件要比RDB文件的体积大。而且，AOF方式的恢复速度也要慢于RDB方式。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>如果你直接执行BGREWRITEAOF命令，那么redis会生成一个全新的AOF文件，其中便包括了可以恢复现有数据的最少的命令集。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>如果运气比较差，AOF文件出现了被写坏的情况，也不必过分担忧，redis并不会贸然加载这个有问题的AOF文件，而是报错退出。这时可以通过以下步骤来修复出错的文件：</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>1.备份被写坏的AOF文件</span><br /><span style='font-family: "comic sans ms", sans-serif'>2.运行redis-check-aof –fix进行修复</span><br /><span style='font-family: "comic sans ms", sans-serif'>3.用diff -u来看下两个文件的差异，确认问题点</span><br /><span style='font-family: "comic sans ms", sans-serif'>4.重启redis，加载修复后的AOF文件</span></p> <h3><span style='font-family: "comic sans ms", sans-serif'>如何选择RDB和AOF</span></h3> <p><span style='font-family: "comic sans ms", sans-serif'>对于我们应该选择RDB还是AOF，官方的建议是两个同时使用。这样可以提供更可靠的持久化方案。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>ps：混合持久化是Redis 4.0才引入的特性，现在很多 公司可能都还在使用3.x版本。使用不了这一特性。</span></p> <p><span style='font-family: "comic sans ms", sans-serif'>另外，可以使用下面这种方式。Master使用AOF，Slave使用RDB快照，master需要首先确保数据完整性，它作为数据备份的第一选择；slave提供只读服务或仅作为备机，它的主要目的就是快速响应客户端read请求或灾切换。</span></p> <p> </p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-24474.htm">兽用疫苗注射到人体如何处理（兽用疫苗对人体有害吗）</a></p>
                                        <p>下一个：<a href="/news/article-24593.htm">动物疫苗的概念和特点（动物疫苗概念股有哪些）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-4-5-clash-v2ray-ss-ssr.htm" title="4月5日 | 最新SSR/Clash/V2ray/Shadowrocket高速免费节点，最高速度22.5M/S">4月5日 | 最新SSR/Clash/V2ray/Shadowrocket高速免费节点，最高速度22.5M/S</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-17-free-clash-subscribe.htm" title="11月17日 | 最新SSR/V2ray/Shadowrocket/Clash高速免费节点，最高速度22.7M/S，便宜机场推荐">11月17日 | 最新SSR/V2ray/Shadowrocket/Clash高速免费节点，最高速度22.7M/S，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-3-26-node-share.htm" title="3月26日 | 最新SSR/Clash/Shadowrocket/V2ray高速免费节点，最高速度18.9M/S">3月26日 | 最新SSR/Clash/Shadowrocket/V2ray高速免费节点，最高速度18.9M/S</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-6-16-free-clash-subscribe.htm" title="6月16日 | 最新SSR/V2ray/Clash/Shadowrocket高速免费节点，最高速度18.6M/S">6月16日 | 最新SSR/V2ray/Clash/Shadowrocket高速免费节点，最高速度18.6M/S</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-5-12-free-clash.htm" title="5月12日 | 最新V2ray/Clash/Shadowrocket/SSR高速免费节点，最高速度20.1M/S">5月12日 | 最新V2ray/Clash/Shadowrocket/SSR高速免费节点，最高速度20.1M/S</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-6-17-clash-v2ray-ss-ssr.htm" title="6月17日 | 最新Shadowrocket/SSR/V2ray/Clash高速免费节点，最高速度20.9M/S">6月17日 | 最新Shadowrocket/SSR/V2ray/Clash高速免费节点，最高速度20.9M/S</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-5-7-free-node-subscribe.htm" title="5月7日 | 最新SSR/V2ray/Clash/Shadowrocket高速免费节点，最高速度23M/S">5月7日 | 最新SSR/V2ray/Clash/Shadowrocket高速免费节点，最高速度23M/S</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-23-free-subscribe-node.htm" title="9月23日 | 最新Shadowrocket/V2ray/Clash/SSR高速免费节点，最高速度20.3M/S">9月23日 | 最新Shadowrocket/V2ray/Clash/SSR高速免费节点，最高速度20.3M/S</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-3-19-node-share-links.htm" title="3月19日19.2M/S|V2ray/Clash/SSR/Shadowrocket免费节点每天更新订阅链接">3月19日19.2M/S|V2ray/Clash/SSR/Shadowrocket免费节点每天更新订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-26-free-clash-subscribe.htm" title="9月26日 | 最新SSR/Clash/V2ray/Shadowrocket高速免费节点，最高速度19.6M/S">9月26日 | 最新SSR/Clash/V2ray/Shadowrocket高速免费节点，最高速度19.6M/S</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">29</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            
            </div>
        </div>
    </section>
    
        <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    ClashFree节点免费订阅站 版权所有
                    <br />
                    Powered by WordPress
                </p>
                <div class="col-lg-4 main-social-footer-29">
                    <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                    <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                    <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                    <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                </div>
            </div>
        </div>
    </section>
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-long-arrow-up"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- /move top -->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>